{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.567ba6ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1XAaf\",\"card\":\"Cards_card__2iA-M\",\"infected\":\"Cards_infected__2_Nba\",\"recovered\":\"Cards_recovered__3v2eV\",\"deaths\":\"Cards_deaths__36uia\"};","import React from 'react';\r\nimport CountUp from 'react-countup'\r\n\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport cx from \"classnames\"\r\nimport styles from './Cards.module.css'\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if(!confirmed) \r\n      return \"Loading...\";\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Infected\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                No. of active cases of COVID-19.\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Recovered\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                No. of recoveries from COVID-19.\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deaths\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                No. of deaths caused by COVID-19.\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n }\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url;\r\n    if(country)\r\n        changeableURL = `${url}/countries/${country}`;\r\n\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableURL);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=> ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData;\r\n    } catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name)\r\n    } catch(err) {\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect (() =>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI();\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                data: dailyData.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map((data) => data.deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              },\r\n              ],\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n      \r\n      const barChart = (\r\n        confirmed ? (\r\n          <Bar \r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [{\r\n                label: 'People',\r\n                backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\r\n                data:[confirmed.value, recovered.value, deaths.value]\r\n              }]\r\n          }}\r\n          options={{\r\n            legend: {display: false}, title: {display: true, text:`Current State in ${country}`}\r\n          }}/>\r\n        ) : null\r\n      )\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart:lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\n\r\nimport {fetchData} from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData}); // Populating the data  \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {data, country} = this.state; //Destructuring the data\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__289AH\",\"image\":\"App_image__SmRui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__19sI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1mVQU\"};","module.exports = __webpack_public_path__ + \"static/media/image.2072d359.png\";"],"sourceRoot":""}